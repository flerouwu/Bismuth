plugins {
	id "org.jetbrains.kotlin.jvm" version "1.9.20"
	id "fabric-loom" version "1.3-SNAPSHOT"
	id "legacy-looming" version "1.3-SNAPSHOT" // Version must be the same as fabric-loom's
}

base.archivesName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	// Only needed for versions not available from vanilla launcher by default.
	// customMinecraftManifest.set("https://meta.legacyfabric.net/v2/manifest/${minecraft_version}")

	// Required by 1.7.x
	// runs {
	// 	client {
	// 		programArgs "--userProperties", "{}"
	// 	}
	// }

	accessWidenerPath.set(file("src/main/resources/bismuth.accesswidener"))
}

repositories {
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(legacy.yarn(project.minecraft_version, project.yarn_build))
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API provides hooks for events, item registration, and more. As most mods will need this, it's included by default.
	// If you know for a fact you don't, it's not required and can be safely removed.
	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}"

	// You can retrieve a specific api module using this notation.
	// modImplementation(legacy.apiModule("legacy-fabric-item-groups-v1", project.fabric_version))

	implementation("org.apache.logging.log4j:log4j-core:2.14.1")
	implementation("com.moandjiezana.toml:toml4j:0.7.2")

	implementation("meteordevelopment:discord-ipc:1.1")
	implementation("com.google.code.gson:gson:2.10.1")

	def kotlinVersion = "1.9.20" // Make sure to update the plugin too!
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
	implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	it.options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release.set(17)
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}